// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NUEVO_PROYECTO_FINAL.Context;

#nullable disable

namespace NUEVO_PROYECTO_FINAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("NUEVO_PROYECTO_FINAL.Models.Actor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("foto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("actores");
                });

            modelBuilder.Entity("NUEVO_PROYECTO_FINAL.Models.Actor_Pelicula", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("actorid")
                        .HasColumnType("int");

                    b.Property<int>("peliculaid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("actorid");

                    b.HasIndex("peliculaid");

                    b.ToTable("actor_pelicula");
                });

            modelBuilder.Entity("NUEVO_PROYECTO_FINAL.Models.Director", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("foto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("directores");
                });

            modelBuilder.Entity("NUEVO_PROYECTO_FINAL.Models.Director_Pelicula", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("directorid")
                        .HasColumnType("int");

                    b.Property<int>("peliculaid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("directorid");

                    b.HasIndex("peliculaid");

                    b.ToTable("director_pelicula");
                });

            modelBuilder.Entity("NUEVO_PROYECTO_FINAL.Models.Genero", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("generos");
                });

            modelBuilder.Entity("NUEVO_PROYECTO_FINAL.Models.Pelicula", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("anio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("duracion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("estado")
                        .HasColumnType("tinyint");

                    b.Property<string>("portada")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sinopsis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("titulo_original")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("peliculas");
                });

            modelBuilder.Entity("NUEVO_PROYECTO_FINAL.Models.Pelicula_Genero", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("generoid")
                        .HasColumnType("int");

                    b.Property<int>("peliculaid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("generoid");

                    b.HasIndex("peliculaid");

                    b.ToTable("pelicula_genero");
                });

            modelBuilder.Entity("NUEVO_PROYECTO_FINAL.Models.Usuario", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("foto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("usuarios");
                });

            modelBuilder.Entity("NUEVO_PROYECTO_FINAL.Models.Actor_Pelicula", b =>
                {
                    b.HasOne("NUEVO_PROYECTO_FINAL.Models.Actor", "actor")
                        .WithMany()
                        .HasForeignKey("actorid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NUEVO_PROYECTO_FINAL.Models.Pelicula", "pelicula")
                        .WithMany()
                        .HasForeignKey("peliculaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("actor");

                    b.Navigation("pelicula");
                });

            modelBuilder.Entity("NUEVO_PROYECTO_FINAL.Models.Director_Pelicula", b =>
                {
                    b.HasOne("NUEVO_PROYECTO_FINAL.Models.Director", "director")
                        .WithMany()
                        .HasForeignKey("directorid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NUEVO_PROYECTO_FINAL.Models.Pelicula", "pelicula")
                        .WithMany()
                        .HasForeignKey("peliculaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("director");

                    b.Navigation("pelicula");
                });

            modelBuilder.Entity("NUEVO_PROYECTO_FINAL.Models.Pelicula_Genero", b =>
                {
                    b.HasOne("NUEVO_PROYECTO_FINAL.Models.Genero", "genero")
                        .WithMany()
                        .HasForeignKey("generoid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NUEVO_PROYECTO_FINAL.Models.Pelicula", "pelicula")
                        .WithMany()
                        .HasForeignKey("peliculaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("genero");

                    b.Navigation("pelicula");
                });
#pragma warning restore 612, 618
        }
    }
}
